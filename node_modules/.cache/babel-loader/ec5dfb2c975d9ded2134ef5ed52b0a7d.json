{"ast":null,"code":"import _classCallCheck from \"/Users/mohit.menghnani/Desktop/React-Redux/github-api/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohit.menghnani/Desktop/React-Redux/github-api/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mohit.menghnani/Desktop/React-Redux/github-api/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mohit.menghnani/Desktop/React-Redux/github-api/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohit.menghnani/Desktop/React-Redux/github-api/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mohit.menghnani/Desktop/React-Redux/github-api/src/components/SearchRepos.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchUserRepos } from \"../actions/postActions\";\n\nvar SearchRepos =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchRepos, _Component);\n\n  function SearchRepos() {\n    _classCallCheck(this, SearchRepos);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SearchRepos).apply(this, arguments));\n  }\n\n  _createClass(SearchRepos, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount(username) {\n      var val = 'priyanka-joshi';\n      this.props.fetchUserRepos(val);\n    } // onSubmit(e) {\n    //   e.preventDefault();\n    //   const post = {\n    //     title: this.state.title,\n    //     body: this.state.body\n    //   };\n    //   this.props.createPost(post);\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var repoList = this.props.repos;\n      console.log(repoList);\n      var repoItems = this.props.repos.map(function (repo) {\n        return React.createElement(\"div\", {\n          key: repo.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, repo.name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, repo.description));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \" Enter the user name \"), React.createElement(\"input\", {\n        type: \"text\",\n        value: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, repoItems));\n    }\n  }]);\n\n  return SearchRepos;\n}(Component);\n\nSearchRepos.prototypes = {\n  fetchUserRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    repos: state.posts.repos\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserRepos: fetchUserRepos\n})(SearchRepos);","map":{"version":3,"sources":["/Users/mohit.menghnani/Desktop/React-Redux/github-api/src/components/SearchRepos.js"],"names":["React","Component","PropTypes","connect","fetchUserRepos","SearchRepos","username","val","props","repoList","repos","console","log","repoItems","map","repo","id","name","description","prototypes","func","isRequired","array","mapStateToProps","state","posts"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,wBAA/B;;IAEMC,W;;;;;;;;;;;;;uCACeC,Q,EAAU;AAC3B,UAAMC,GAAG,GAAG,gBAAZ;AACA,WAAKC,KAAL,CAAWJ,cAAX,CAA0BG,GAA1B;AACD,K,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;6BAES;AACP,UAAME,QAAQ,GAAG,KAAKD,KAAL,CAAWE,KAA5B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,UAAMI,SAAS,GAAG,KAAKL,KAAL,CAAWE,KAAX,CAAiBI,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eACzC;AAAK,UAAA,GAAG,EAAGA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,IAAI,CAACE,IAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIF,IAAI,CAACG,WAAT,CAFF,CADyC;AAAA,OAAzB,CAAlB;AAMA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,SADH,CAPF,CADF;AAaD;;;;EArCuBZ,S;;AAwC1BI,WAAW,CAACc,UAAZ,GAAyB;AACvBf,EAAAA,cAAc,EAAGF,SAAS,CAACkB,IAAV,CAAeC,UADT;AAEvBX,EAAAA,KAAK,EAAGR,SAAS,CAACoB,KAAV,CAAgBD;AAFD,CAAzB;;AAMA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9Bd,IAAAA,KAAK,EAAGc,KAAK,CAACC,KAAN,CAAYf;AADU,GAAL;AAAA,CAA7B;;AAKA,eAAeP,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA,cAAc,EAAdA;AAAF,CAAlB,CAAP,CAA6CC,WAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchUserRepos } from \"../actions/postActions\";\n\nclass SearchRepos extends Component {\n  componentWillMount(username) {\n    const val = 'priyanka-joshi'\n    this.props.fetchUserRepos(val);\n  }\n\n  // onSubmit(e) {\n  //   e.preventDefault();\n  //   const post = {\n  //     title: this.state.title,\n  //     body: this.state.body\n  //   };\n  //   this.props.createPost(post);\n  // }\n\n  render() {\n    const repoList = this.props.repos;\n    console.log(repoList);\n    const repoItems = this.props.repos.map(repo => (\n      <div key ={repo.id}>\n        <h3>{repo.name}</h3>\n        <p>{repo.description}</p>\n      </div>\n    ));\n    return (\n      <div>\n        <form>\n          <div>\n            <label> Enter the user name </label>\n            <input type=\"text\" value=\"username\" />\n          </div>\n        </form>\n        <div>\n          {repoItems}\n        </div>\n      </div>\n    );\n  }\n}\n\nSearchRepos.prototypes = {\n  fetchUserRepos : PropTypes.func.isRequired,\n  repos : PropTypes.array.isRequired\n}\n\n\nconst mapStateToProps = state => ({\n    repos : state.posts.repos\n  });\n\n\nexport default connect(mapStateToProps, { fetchUserRepos })(SearchRepos);"]},"metadata":{},"sourceType":"module"}