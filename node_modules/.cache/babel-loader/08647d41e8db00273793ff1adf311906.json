{"ast":null,"code":"import _objectSpread from \"/Users/mohit.menghnani/Desktop/GithubAPI/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { FETCH_POSTS, NEW_REPO, LIST_REPOS } from \"../actions/types\";\nvar initialState = {\n  items: [],\n  newRepo: {},\n  repos: []\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    default:\n      return state;\n\n    case FETCH_POSTS:\n      return _objectSpread({}, state, {\n        items: action.payload\n      });\n\n    case NEW_REPO:\n      return _objectSpread({}, state, {\n        newRepo: action.payload\n      });\n\n    case LIST_REPOS:\n      return _objectSpread({}, state, {\n        repos: action.payload\n      });\n  }\n}","map":{"version":3,"sources":["/Users/mohit.menghnani/Desktop/GithubAPI/src/reducers/postReducer.js"],"names":["FETCH_POSTS","NEW_REPO","LIST_REPOS","initialState","items","newRepo","repos","state","action","type","payload"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,QAAtB,EAAgCC,UAAhC,QAAkD,kBAAlD;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE;AACE,aAAOF,KAAP;;AACF,SAAKP,WAAL;AACE,+BACKO,KADL;AAEEH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAFhB;;AAIF,SAAKT,QAAL;AACE,+BACKM,KADL;AAEEF,QAAAA,OAAO,EAAEG,MAAM,CAACE;AAFlB;;AAIF,SAAKR,UAAL;AACE,+BACKK,KADL;AAEED,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAFhB;AAdJ;AAmBD","sourcesContent":["import { FETCH_POSTS, NEW_REPO, LIST_REPOS } from \"../actions/types\";\n\nconst initialState = {\n  items: [],\n  newRepo: {},\n  repos: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    default:\n      return state;\n    case FETCH_POSTS:\n      return {\n        ...state,\n        items: action.payload\n      };\n    case NEW_REPO:\n      return {\n        ...state,\n        newRepo: action.payload\n      };\n    case LIST_REPOS:\n      return {\n        ...state,\n        repos: action.payload\n      };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}