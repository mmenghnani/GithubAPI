{"ast":null,"code":"import { FETCH_POSTS, NEW_REPO, LIST_REPOS, DELETE_REPO } from \"./types\"; //const bearer = 'Bearer 99968b720ada390d18c37faf81997a2b4d86aff4';\n\nvar bearer = \"Bearer f411dbce3e889560bf19b2da368a81f1fecc97b1\";\nexport var fetchPosts = function fetchPosts() {\n  return function (dispatch) {\n    fetch(\"https://api.github.com/users/mmenghnani/starred\", {\n      headers: {\n        Authorization: bearer\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (posts) {\n      return dispatch({\n        type: FETCH_POSTS,\n        payload: posts\n      });\n    });\n  };\n};\nexport var createNewRepo = function createNewRepo(postData) {\n  return function (dispatch) {\n    fetch(\"https://api.github.com/user/repos\", {\n      method: \"POST\",\n      headers: {\n        Authorization: bearer,\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(postData)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (postData) {\n      return dispatch({\n        type: NEW_REPO,\n        payload: postData\n      });\n    });\n  };\n};\nexport var fetchUserRepos = function fetchUserRepos(userName) {\n  return function (dispatch) {\n    fetch(\"https://api.github.com/users/\".concat(userName, \"/repos?page=1&per_page=100\"), {\n      headers: {\n        Authorization: bearer\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (repos) {\n      return dispatch({\n        type: LIST_REPOS,\n        payload: repos\n      });\n    });\n  };\n};\nexport var fetchUserFollowing = function fetchUserFollowing(userName) {\n  return function (dispatch) {\n    fetch(\"https://api.github.com/users/\".concat(userName, \"/repos?page=1&per_page=100\"), {\n      headers: {\n        Authorization: bearer\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (repos) {\n      return dispatch({\n        type: LIST_REPOS,\n        payload: repos\n      });\n    });\n  };\n};\nexport var RepoDeletion = function RepoDeletion(repoName) {\n  return function (dispatch) {\n    fetch(\"https://api.github.com/repos/mmenghnani/\".concat(repoName), {\n      method: \"DELETE\",\n      headers: {\n        Authorization: bearer\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (postData) {\n      return dispatch({\n        type: DELETE_REPO,\n        payload: postData\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mohit.menghnani/Desktop/GithubAPI/src/actions/postActions.js"],"names":["FETCH_POSTS","NEW_REPO","LIST_REPOS","DELETE_REPO","bearer","fetchPosts","dispatch","fetch","headers","Authorization","then","res","json","posts","type","payload","createNewRepo","postData","method","body","JSON","stringify","fetchUserRepos","userName","repos","fetchUserFollowing","RepoDeletion","repoName"],"mappings":"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","sourcesContent":["import { FETCH_POSTS, NEW_REPO, LIST_REPOS,DELETE_REPO } from \"./types\";\n\n//const bearer = 'Bearer 99968b720ada390d18c37faf81997a2b4d86aff4';\nconst bearer = \"Bearer f411dbce3e889560bf19b2da368a81f1fecc97b1\";\n\nexport const fetchPosts = () => dispatch => {\n  fetch(\"https://api.github.com/users/mmenghnani/starred\", {\n    headers: {\n      Authorization: bearer\n    }\n  })\n    .then(res => res.json())\n    .then(posts =>\n      dispatch({\n        type: FETCH_POSTS,\n        payload: posts\n      })\n    );\n};\n\nexport const createNewRepo = postData => dispatch => {\n  fetch(\"https://api.github.com/user/repos\", {\n    method: \"POST\",\n    headers: {\n      Authorization: bearer,\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(postData)\n  })\n    .then(res => res.json())\n    .then(postData =>\n      dispatch({\n        type: NEW_REPO,\n        payload: postData\n      })\n    );\n};\n\nexport const fetchUserRepos = userName => dispatch => {\n  fetch(`https://api.github.com/users/${userName}/repos?page=1&per_page=100`, {\n    headers: {\n      Authorization: bearer\n    }\n  })\n    .then(res => res.json())\n    .then(repos =>\n      dispatch({\n        type: LIST_REPOS,\n        payload: repos\n      })\n    );\n};\n\nexport const fetchUserFollowing = userName => dispatch => {\n  fetch(`https://api.github.com/users/${userName}/repos?page=1&per_page=100`, {\n    headers: {\n      Authorization: bearer\n    }\n  })\n    .then(res => res.json())\n    .then(repos =>\n      dispatch({\n        type: LIST_REPOS,\n        payload: repos\n      })\n    );\n};\n\nexport const RepoDeletion = repoName => dispatch => {\n    fetch(`https://api.github.com/repos/mmenghnani/${repoName}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: bearer      \n    }    \n    })\n      .then(res => res.json())\n      .then(postData =>\n        dispatch({\n          type: DELETE_REPO,\n          payload: postData\n        })\n      );\n  };\n"]},"metadata":{},"sourceType":"module"}