{"ast":null,"code":"import { FETCH_POSTS, NEW_POST } from './types';\nexport var fetchPosts = function fetchPosts() {\n  return function (dispatch) {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(function (res) {\n      return res.json();\n    }).then(function (posts) {\n      return dispatch({\n        type: FETCH_POSTS,\n        payload: posts\n      });\n    });\n  };\n};\nexport var createPost = function createPost() {\n  return function (dispatch) {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(function (res) {\n      return res.json();\n    }).then(function (posts) {\n      return dispatch({\n        type: NEW_POSTS,\n        payload: posts\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mohit.menghnani/Desktop/React-Redux/github-api/src/actions/postActions.js"],"names":["FETCH_POSTS","NEW_POST","fetchPosts","dispatch","fetch","then","res","json","posts","type","payload","createPost","NEW_POSTS"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAAAC,QAAQ,EAAI;AACpCC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADT,EAECF,IAFD,CAEM,UAAAG,KAAK;AAAA,aAAIL,QAAQ,CAAC;AACpBM,QAAAA,IAAI,EAAGT,WADa;AAEpBU,QAAAA,OAAO,EAAGF;AAFU,OAAD,CAAZ;AAAA,KAFX;AAMH,GAPqB;AAAA,CAAnB;AASP,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAAAR,QAAQ,EAAI;AACxCC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACU,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADb,EAEKF,IAFL,CAEU,UAAAG,KAAK;AAAA,aAAIL,QAAQ,CAAC;AACpBM,QAAAA,IAAI,EAAGG,SADa;AAEpBF,QAAAA,OAAO,EAAGF;AAFU,OAAD,CAAZ;AAAA,KAFf;AAMH,GAPyB;AAAA,CAAnB","sourcesContent":["import { FETCH_POSTS, NEW_POST } from './types';\n\nexport const fetchPosts = () => dispatch => {\n        fetch('https://jsonplaceholder.typicode.com/posts')\n        .then(res => res.json())\n        .then(posts => dispatch({\n            type : FETCH_POSTS,\n            payload : posts\n        }))\n    }\n\nexport const createPost = () => dispatch => {\n    fetch('https://jsonplaceholder.typicode.com/posts')\n        .then(res => res.json())\n        .then(posts => dispatch({\n            type : NEW_POSTS,\n            payload : posts\n        }))\n}    "]},"metadata":{},"sourceType":"module"}