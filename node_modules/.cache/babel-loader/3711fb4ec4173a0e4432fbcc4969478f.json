{"ast":null,"code":"import _classCallCheck from \"/Users/mohit.menghnani/Desktop/React-Redux/github-api/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohit.menghnani/Desktop/React-Redux/github-api/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mohit.menghnani/Desktop/React-Redux/github-api/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mohit.menghnani/Desktop/React-Redux/github-api/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohit.menghnani/Desktop/React-Redux/github-api/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mohit.menghnani/Desktop/React-Redux/github-api/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mohit.menghnani/Desktop/React-Redux/github-api/src/components/SearchRepos.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchUserRepos } from \"../actions/postActions\";\n\nvar SearchRepos =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchRepos, _Component);\n\n  function SearchRepos(props) {\n    var _this;\n\n    _classCallCheck(this, SearchRepos);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchRepos).call(this, props));\n    _this.state = {\n      username: ''\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SearchRepos, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount(username) {//   const val = 'priyanka-joshi'\n      //   this.props.fetchUserRepos(val);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState({\n        username: e.target.value\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      this.props.fetchUserRepos(this.state.username);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var repoItems = this.props.repos.map(function (repo) {\n        return React.createElement(\"div\", {\n          key: repo.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, repo.name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, repo.description ? repo.description : 'Repository description does not exist'));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Get Github Repositories\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \" Enter the github user name \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, repoItems.length ? \"We found the following \".concat(repoItems.length, \" repositories for this user\") : '', repoItems));\n    }\n  }]);\n\n  return SearchRepos;\n}(Component);\n\nSearchRepos.prototypes = {\n  fetchUserRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    repos: state.posts.repos\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserRepos: fetchUserRepos\n})(SearchRepos);","map":{"version":3,"sources":["/Users/mohit.menghnani/Desktop/React-Redux/github-api/src/components/SearchRepos.js"],"names":["React","Component","PropTypes","connect","fetchUserRepos","SearchRepos","props","state","username","onChange","bind","onSubmit","e","setState","target","value","preventDefault","repoItems","repos","map","repo","id","name","description","length","prototypes","func","isRequired","array","mapStateToProps","posts"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,wBAA/B;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAG;AADA,KAAb;AAGA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,uDAAhB;AANgB;AAQjB;;;;uCAEkBF,Q,EAAU,CAC7B;AACA;AACE;;;6BAEQI,C,EAAE;AACV,WAAKC,QAAL,CAAc;AAACL,QAAAA,QAAQ,EAAEI,CAAC,CAACE,MAAF,CAASC;AAApB,OAAd;AACD;;;6BAEQH,C,EAAG;AACVA,MAAAA,CAAC,CAACI,cAAF;AACA,WAAKV,KAAL,CAAWF,cAAX,CAA0B,KAAKG,KAAL,CAAWC,QAArC;AACD;;;6BAEQ;AACP,UAAMS,SAAS,GAAG,KAAKX,KAAL,CAAWY,KAAX,CAAiBC,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eACzC;AAAK,UAAA,GAAG,EAAGA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,IAAI,CAACE,IAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIF,IAAI,CAACG,WAAL,GAAmBH,IAAI,CAACG,WAAxB,GAAsC,uCAA1C,CAFF,CADyC;AAAA,OAAzB,CAAlB;AAOA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEE;AAAM,QAAA,QAAQ,EAAE,KAAKZ,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,EAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,QAArD;AAA+D,QAAA,QAAQ,EAAE,KAAKC,QAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,CADF,CAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCQ,SAAS,CAACO,MAAV,oCAA6CP,SAAS,CAACO,MAAvD,mCAA6F,EAD9F,EAEIP,SAFJ,CATF,CADF;AAgBD;;;;EAjDuBhB,S;;AAoD1BI,WAAW,CAACoB,UAAZ,GAAyB;AACvBrB,EAAAA,cAAc,EAAGF,SAAS,CAACwB,IAAV,CAAeC,UADT;AAEvBT,EAAAA,KAAK,EAAGhB,SAAS,CAAC0B,KAAV,CAAgBD;AAFD,CAAzB;;AAMA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAtB,KAAK;AAAA,SAAK;AAC9BW,IAAAA,KAAK,EAAGX,KAAK,CAACuB,KAAN,CAAYZ;AADU,GAAL;AAAA,CAA7B;;AAKA,eAAef,OAAO,CAAC0B,eAAD,EAAkB;AAAEzB,EAAAA,cAAc,EAAdA;AAAF,CAAlB,CAAP,CAA6CC,WAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchUserRepos } from \"../actions/postActions\";\n\nclass SearchRepos extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      username : ''\n    }\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n  }\n  \n  componentWillMount(username) {\n  //   const val = 'priyanka-joshi'\n  //   this.props.fetchUserRepos(val);\n   }\n\n   onChange(e){\n    this.setState({username: e.target.value})\n  }  \n\n  onSubmit(e) {\n    e.preventDefault();\n    this.props.fetchUserRepos(this.state.username);\n  }\n\n  render() {\n    const repoItems = this.props.repos.map(repo => (\n      <div key ={repo.id}>\n        <h3>{repo.name}</h3>\n        <p>{repo.description ? repo.description : 'Repository description does not exist'}</p>\n      </div>\n    ));\n\n    return (\n      <div>\n        <h1>Get Github Repositories</h1>\n        <form onSubmit={this.onSubmit}>\n          <div>\n            <label> Enter the github user name </label>\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.onChange} />\n          <button type=\"submit\">Submit</button>\n          </div>\n        </form>\n        <div>\n        {repoItems.length ? `We found the following ${repoItems.length} repositories for this user` : ''}\n          { repoItems }\n        </div>\n      </div>\n    );\n  }\n}\n\nSearchRepos.prototypes = {\n  fetchUserRepos : PropTypes.func.isRequired,\n  repos : PropTypes.array.isRequired\n}\n\n\nconst mapStateToProps = state => ({\n    repos : state.posts.repos\n  });\n\n\nexport default connect(mapStateToProps, { fetchUserRepos })(SearchRepos);"]},"metadata":{},"sourceType":"module"}